{"version":3,"sources":["components/card/card.component.jsx","components/card-list/card-list.component.jsx","components/search-box/search-box.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","monster","className","alt","src","id","name","email","CardList","monsters","map","SearchBox","placeholder","handleChange","type","onChange","App","e","setState","searchField","target","value","state","axios","get","then","res","data","catch","err","console","log","this","filteredMonsters","filter","toLowerCase","includes","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8VAGaA,EAAO,SAAC,GAAe,IAAdC,EAAa,EAAbA,QAClB,OACI,sBAAKC,UAAU,iBAAf,UACI,qBAAKC,IAAI,UAAUC,IAAG,+BAA0BH,EAAQI,GAAlC,4BACtB,6BAAsBJ,EAAQK,MAArBL,EAAQI,IACjB,4BAAIJ,EAAQM,YCJXC,EAAW,SAAC,GAAgB,IAAfC,EAAc,EAAdA,SAEtB,OACI,qBAAKP,UAAU,YAAf,SAA4BO,EAASC,KAAI,SAACT,GAAD,OACrC,cAAC,EAAD,CAAuBA,QAASA,GAArBA,EAAQI,UCLlBM,G,MAAY,SAAC,GAAiC,IAAhCC,EAA+B,EAA/BA,YAAaC,EAAkB,EAAlBA,aACpC,OACI,uBAAOX,UAAU,SACfY,KAAK,SACLF,YAAaA,EACbG,SAAUF,MCgCLG,G,wDAjCb,aAAe,IAAD,8BACZ,gBAcFH,aAAe,SAACI,GACd,EAAKC,SAAS,CAAEC,YAAaF,EAAEG,OAAOC,SAdtC,EAAKC,MAAQ,CACXb,SAAU,GACVU,YAAa,IAJH,E,qDAQd,WAAqB,IAAD,OAClBI,IACGC,IAAI,8CACJC,MAAK,SAACC,GAAD,OAAS,EAAKR,SAAS,CAAET,SAAUiB,EAAIC,UAC5CC,OAAM,SAACC,GAAD,OAASC,QAAQC,IAAIF,Q,oBAMhC,WAAU,IAAD,EAC2BG,KAAKV,MAA/Bb,EADD,EACCA,SAAUU,EADX,EACWA,YACZc,EAAmBxB,EAASyB,QAAO,SAACjC,GAAD,OACvCA,EAAQK,KAAK6B,cAAcC,SAASjB,EAAYgB,kBAElD,OACE,sBAAKjC,UAAU,MAAf,UACE,kDACA,cAAC,EAAD,CAAWU,YAAY,kBAAkBC,aAAcmB,KAAKnB,eAC5D,cAAC,EAAD,CAAUJ,SAAUwB,W,GA5BVI,cCMHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBf,MAAK,YAAkD,IAA/CgB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.d8151e9c.chunk.js","sourcesContent":["import React from 'react'\nimport './card.style.css'\n\nexport const Card = ({monster}) => {\n    return(\n        <div className='card-container'>\n            <img alt='monster' src={`https://robohash.org/${monster.id}?set=set2&size=180x180`}/>\n            <h2 key={monster.id}>{monster.name}</h2>\n            <p>{monster.email}</p>\n        </div>\n    )\n}","import React from \"react\";\nimport './card-list.style.css'\nimport { Card } from \"../card/card.component\";\n\nexport const CardList = ({monsters}) => {\n\n    return(\n        <div className=\"card-list\">{monsters.map((monster) => (\n            <Card key={monster.id} monster={monster}/>\n          ))}</div>\n    )\n}","import React from 'react'\nimport './search-box.style.css'\n\nexport const SearchBox = ({placeholder, handleChange}) => {\n    return(\n        <input className='search'\n          type=\"search\"\n          placeholder={placeholder}\n          onChange={handleChange}\n        />\n    )\n}\n\n","import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport { CardList } from \"./components/card-list/card-list.component\";\nimport { SearchBox } from \"./components/search-box/search-box.component\";\nimport \"./App.css\";\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      monsters: [],\n      searchField: \"\",\n    };\n  }\n\n  componentDidMount() {\n    axios\n      .get(\"https://jsonplaceholder.typicode.com/users\")\n      .then((res) => this.setState({ monsters: res.data }))\n      .catch((err) => console.log(err));\n  }\n\n  handleChange = (e) => {\n    this.setState({ searchField: e.target.value })\n  }\n  render() {\n    const { monsters, searchField } = this.state;\n    const filteredMonsters = monsters.filter((monster) =>\n      monster.name.toLowerCase().includes(searchField.toLowerCase())\n    );\n    return (\n      <div className=\"App\">\n        <h1>Monsters Rolodex</h1>\n        <SearchBox placeholder='search monsters' handleChange={this.handleChange}/>\n        <CardList monsters={filteredMonsters} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}